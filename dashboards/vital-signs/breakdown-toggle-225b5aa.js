define("text!components/controls/breakdown-toggle/breakdown-toggle.html",[],function(){return'<div class="ui inverted vertical fluid main menu">\n    <a class="item" data-bind="css: {\'active\': display()}, click: toggle">\n        <span>\n            <i class="large block layout icon"></i>\n            Break Down by Site\n        </span>\n    </a>\n    \x3c!-- ko if: display() --\x3e\n    <div class="colored menu">\n    \x3c!-- ko foreach: columns()--\x3e\n        <div class="item">\n            <label class="clickable">\n                <i class="circle icon"></i>\n                <span data-bind="text: label"></span>\n\n                <input type="checkbox" data-bind="disable: selected() && $parents[0].isOnlyOneSelected(), checked: selected">\n                <svg height="10" width="100%">\n                    <path stroke="white"\n                          data-bind="attr: {\'stroke-dasharray\': pattern}"\n                          d="M6 5 l215 0" />\n                </svg>\n            </label>\n        </div>\n    \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n</div>\n'}),define("components/controls/breakdown-toggle/breakdown-toggle",["require","knockout","text!./breakdown-toggle.html"],function(e){function n(e,n){var t=[];return e&&e.breakdown&&e.breakdown.columns.forEach(function(e,i){var a=i%n.length;t.push({selected:s.observable(!0),label:e,pattern:n[a]})}),t}function t(e){this.patterns=e.patterns,this.metric=e.metric,this.dashes=this.patterns.map(function(e){return e.toString()}),this.display=s.observable(!1),this.columns=e.breakdownColumns,e.metric.subscribe(function(){this.display(!1),this.columns([])}.bind(this)),this.toggle=function(){this.display()?this.columns([]):this.columns(n(this.metric(),this.dashes)),this.display(!this.display())},this.isOnlyOneSelected=s.computed(function(){if(this.columns){for(var e=this.columns().length,n=0,t=0;t<e;t++){this.columns()[t].selected()&&n++}return 1===n}}.bind(this))}var s=e("knockout");return{viewModel:t,template:e("text!./breakdown-toggle.html")}});